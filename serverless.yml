service: paolo-music-store-api

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    SUPABASE_URL: ${env:SUPABASE_URL}
    SUPABASE_SERVICE_KEY: ${env:SUPABASE_SERVICE_KEY}
    ADMIN_EMAIL: ${env:ADMIN_EMAIL}
    ADMIN_PASSWORD_HASH: ${env:ADMIN_PASSWORD_HASH}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"

functions:
  # Submit order (public access)
  submitOrder:
    handler: src/handlers/orders.submitOrder
    events:
      - httpApi:
          path: /api/orders
          method: POST
          cors: true
    environment:
      FUNCTION_NAME: submitOrder

  # Get orders (admin only)
  getOrders:
    handler: src/handlers/orders.getOrders
    events:
      - httpApi:
          path: /api/orders
          method: GET
          cors: true
    environment:
      FUNCTION_NAME: getOrders

  # Update order status (admin only)
  updateOrderStatus:
    handler: src/handlers/orders.updateOrderStatus
    events:
      - httpApi:
          path: /api/orders/{orderId}/status
          method: PUT
          cors: true
    environment:
      FUNCTION_NAME: updateOrderStatus

  # Admin authentication
  adminLogin:
    handler: src/handlers/auth.adminLogin
    events:
      - httpApi:
          path: /api/admin/login
          method: POST
          cors: true
    environment:
      FUNCTION_NAME: adminLogin

  # Get order statistics (admin only)
  getOrderStats:
    handler: src/handlers/orders.getOrderStats
    events:
      - httpApi:
          path: /api/admin/stats
          method: GET
          cors: true
    environment:
      FUNCTION_NAME: getOrderStats

  # Search orders (admin only)
  searchOrders:
    handler: src/handlers/orders.searchOrders
    events:
      - httpApi:
          path: /api/admin/search
          method: GET
          cors: true
    environment:
      FUNCTION_NAME: searchOrders

plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 3000
    lambdaPort: 3002
    noPrependStageInUrl: true

package:
  patterns:
    - '!node_modules/.prisma/**'
    - '!node_modules/@prisma/client/libquery_engine-*'
    - '!node_modules/prisma/libquery_engine-*'
    - '!tests/**'
    - '!src/**/*.test.js'
    - '!src/**/*.spec.js' 